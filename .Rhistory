install.packages(readr)
install.packages(reader)
install.packages('readr')
library("readr")
library('readr')
IrisDataset <- read.csv(iris.csv)
IrisDataset <- read.csv(iris.csv)
install.packages(readr)
install.packages('readr')
library('readr')
IrisDataset <- read.csv('C:\Users\user\Downloads\R Tutorial Data\R Tutorial Data Sets\iris.csv')
IrisDataset <- read.csv('C:/Users/user/Downloads/R Tutorial Data/R Tutorial Data Sets/iris.csv')
attributes(IrisDataset)
attributes(IrisDataset)
summary(IrisDataset)
str(IrisDatasets)
str(IrisDataset)
names(IrisDataset)
hist(IrisDataset$Species)
hist(IrisDataset$Sepal.Length)
hist(IrisDataset$Sepal.Width)
hist(IrisDataset$Petal.Length)
hist(IrisDataset$Petal.Width)
hist(IrisDataset$Petal.Width)
plot(IrisDataset$Sepal.Length)
qqnorm(IrisDataset)
qqnorm(Sepal.Length)
qqnorm(IrisDataset$Sepal.Length)
> qqnorm(IrisDataset$Sepal.Length)
> qqnorm(IrisDataset$Sepal.Width)
> qqnorm(IrisDataset$Petal.Length)
> qqnorm(IrisDataset$Petal.Width)
qqnorm(IrisDataset$Sepal.Length)hist(IrisDataset$Sepal.Width)
hist(IrisDataset$Petal.Length)
hist(IrisDataset$Petal.Width)
qqnorm(IrisDataset$Sepal.Length)
qqnorm(IrisDataset$Sepal.Width)
qqnorm(IrisDataset$Petal.Length)
qqnorm(IrisDataset$Petal.Width)
qqnorm(IrisDataset$Petal.Width)
IrisDataset$Species<- as.numeric(IrisDataset$Species)
IrisDataset$Species<- as.numeric(IrisDataset$Species)
set.seed(123)
trainSize <- round(nrow(IrisDataset) * 0.2)
trainSize <- round(nrow(IrisDataset) * 0.2)
testSize <- nrow(IrisDataset) - trainSet
testSize <- nrow(IrisDataset) - trainSize
trainSize
testSize
trainSet <- IrisDataset[training_indices, ]
trainSet <- IrisDataset[trainSet, ]
trainSet <- IrisDataset[trainSize, ]
trainSet <- IrisDataset[training_indices,]
training_indices<-sample(seq_len(nrow(IrisDataset)),size =trainSize)
trainSet <- IrisDataset[training_indices, ]
testSet <- IrisDataset[-training_indices, ]
testSet <- IrisDataset[-training_indices, ]
set.seed(405)
trainSet <- IrisDataset[training_indices, ]
testSet <- IrisDataset[-training_indices, ]
LinearModel<- lm(trainSet$Petal.Width ~ testingSet$Petal.Length)
LinearModel<- lm(Petal.Width ~ Petal.Length, trainSet)
View(LinearModel)
LinearModel<- lm(Petal.Width ~ Petal.Length, trainSet)
summary(LinearModel)
summary(LinearModel)
prediction<-predict(LinearModeltestSet)
prediction<-predict(LinearModel$testSet)
prediction<-predict(LinearModel,testSet)
prediction<-predict(LinearModel,testSet)
prediction
IrisDataset <- read.csv('C:/Users/user/Downloads/R Tutorial Data/R Tutorial Data Sets/iris.csv')
attributes(IrisDataset)
summary(IrisDataset)
str(IrisDataset)
hist(IrisDataset$Sepal.Length)
hist(IrisDataset$Sepal.Width)
hist(IrisDataset$Petal.Length)
hist(IrisDataset$Petal.Width)
qqnorm(IrisDataset$Sepal.Length)
qqnorm(IrisDataset$Sepal.Width)
qqnorm(IrisDataset$Petal.Length)
qqnorm(IrisDataset$Petal.Width)
IrisDataset$Species<- as.numeric(IrisDataset$Species)
set.seed(123)
trainSize <- round(nrow(IrisDataset) * 0.2)
testSize <- nrow(IrisDataset) - trainSize
training_indices<-sample(seq_len(nrow(IrisDataset)),size =trainSize)
trainSet <- IrisDataset[training_indices, ]
testSet <- IrisDataset[-training_indices, ]
set.seed(405)
trainSet <- IrisDataset[training_indices, ]
testSet <- IrisDataset[-training_indices, ]
LinearModel<- lm(Petal.Width ~ Petal.Length, trainSet)
summary(LinearModel)
prediction<-predict(LinearModel,testSet)
plot(IrisDataset$Petal.Length  ~ Petal.Width )
plot(IrisDataset$'Petal.Length'  ~ IrisDataset$'Petal.Width' )
abline(lm(IrisDataset$'Petal.Length'  ~ IrisDataset$'Petal.Width'))
prediction
LinearModel<- lm(Petal.Length ~ Petal.Width, trainSet)
summary(LinearModel)
prediction<-predict(LinearModel,testSet)
plot(IrisDataset$'Petal.Length'  ~ IrisDataset$'Petal.Width' )
abline(lm(IrisDataset$'Petal.Length'  ~ IrisDataset$'Petal.Width'))
plot(IrisDataset$'Petal.Length'  ~ prediction )
plot(IrisDataset$'Petal.Length'  ~ IrisDataset$prediction )
plot(IrisDataset$'Petal.Length'  ~ IrisDataset$'prediction' )
library(ggplot2)
ggplot(iris, aes(x = iris$Sepal.Width, y = iris$Sepal.Width))
ggplot(iris, aes(x = iris$Sepal.Width, y = iris$Sepal.Width)) + geom_polygon()
ggplot(iris, aes(x = iris$Sepal.Width)) + geom_histogram()
ggplot(iris, aes(x = iris$Sepal.Width)) + geom_histogram(stat_bin(bins=30))
IrisDataset <- read.csv('C:/Users/user/Downloads/R Tutorial Data/R Tutorial Data Sets/iris.csv')
attributes(IrisDataset)
View(IrisDataset)
View(IrisDataset)
str(IrisDataset)
hist(IrisDataset$Sepal.Length)
hist(IrisDataset$Sepal.Length,breaks=40)
hist(IrisDataset$Sepal.Length,breaks=50)
hist(IrisDataset$Sepal.Width, breaks=100)
hist(IrisDataset$Sepal.Width, breaks=50)
hist(IrisDataset$Sepal.Width, breaks=60)
hist(IrisDataset$Petal.Length, breaks = 100)
hist(IrisDataset$Petal.Width, breaks = 50)
IrisDataset <- read.csv('C:/Users/user/Downloads/R Tutorial Data/R Tutorial Data Sets/iris.csv')
attributes(IrisDataset)
summary(IrisDataset)
str(IrisDataset)
hist(IrisDataset$Sepal.Length, breaks = 50)
hist(IrisDataset$Sepal.Length, breaks = 60)
View(IrisDataset)
View(IrisDataset)
hist(IrisDataset$Sepal.Length, breaks = 55)
library(ggplot2)
ggplot(IrisDataset, aes(x = IrisDataset$Sepal.Length))
ggplot(IrisDataset, aes(x = IrisDataset$Sepal.Length)), geom_histogram())
ggplot(IrisDataset, aes(x = IrisDataset$Sepal.Length)), geom_histogram(bins = 55)
ggplot(IrisDataset, aes(x = IrisDataset$Sepal.Length)), geom_histogram(bins = 55))
ggplot(IrisDataset, aes(x = IrisDataset$Sepal.Length,)), geom_histogram(bins = 55))
ggplot(IrisDataset, aes(x = IrisDataset$Sepal.Length)), geom_histogram(bins = 55))
ggplot(IrisDataset, aes(x = IrisDataset$Sepal.Length))+ geom_histogram(bins = 55))
ggplot(IrisDataset, aes(x = IrisDataset$Sepal.Length))+ geom_histogram(bins = 55)
ggplot(IrisDataset, aes(x = IrisDataset$Sepal.Width))+ geom_histogram(bins = 55)
ggplot(IrisDataset, aes(x = IrisDataset$Petal.Length))+ geom_histogram(bins = 55)
ggplot(IrisDataset, aes(x = IrisDataset$Petal.Width))+ geom_histogram(bins = 55)
ggplot(IrisDataset, aes(x = IrisDataset$Sepal.Length))+ geom_histogram(bins = 100)
ggplot(IrisDataset, aes(x = IrisDataset$Sepal.Width))+ geom_histogram(bins = 55)
ggplot(IrisDataset, aes(x = IrisDataset$Petal.Length))+ geom_histogram(bins = 55)
ggplot(IrisDataset, aes(x = IrisDataset$Petal.Length))+ geom_histogram(bins = 100)
ggplot(IrisDataset, aes(x = IrisDataset$Petal.Length))+ geom_histogram(bins = 120)
55
ggplot(IrisDataset, aes(x = IrisDataset$Sepal.Length))+ geom_histogram(bins = 100)
ggplot(IrisDataset, aes(x = IrisDataset$Sepal.Width))+ geom_histogram(bins = 55)
ggplot(IrisDataset, aes(x = IrisDataset$Petal.Length))+ geom_histogram(bins = 120)
ggplot(IrisDataset, aes(x = IrisDataset$Petal.Width))+ geom_histogram(bins = 55)
boxplot(IrisDataset$Sepal.Length, IrisDataset$Sepal.Width, IrisDataset$Petal.Length, IrisDataset$Petal.Width)
boxplot(IrisDataset$Sepal.Length, IrisDataset$Sepal.Width, IrisDataset$Petal.Length, IrisDataset$Petal.Width, names = c(sepal lenght, sepal width, petal length, petal width))
boxplot(IrisDataset$Sepal.Length, IrisDataset$Sepal.Width, IrisDataset$Petal.Length, IrisDataset$Petal.Width, names = c("sepal lenght", "sepal width", "petal length", "petal width"))
+ geom_point(color = IrisDataset$Species)
ggplot(IrisDataset, aes(x = IrisDataset$Sepal.Width, y = IrisDataset$Sepal.Length))
+ geom_point(color = IrisDataset$Species)
ggplot(IrisDataset, aes(x = IrisDataset$Sepal.Width, y = IrisDataset$Sepal.Length)) + geom_point(color = IrisDataset$Species)
ggplot(IrisDataset, aes(x = IrisDataset$Sepal.Width, y = IrisDataset$Sepal.Length)) + geom_point(color = IrisDataset$Species)
IrisDataset$Species<- as.numeric(IrisDataset$Species)
ggplot(IrisDataset, aes(x = IrisDataset$Sepal.Width, y = IrisDataset$Sepal.Length)) + geom_point(color = IrisDataset$Species)
ggplot(IrisDataset, aes(x = IrisDataset$Sepal.Width, y = IrisDataset$Sepal.Length, color = IrisDataset$Species)) + geom_point()
ggplot(IrisDataset, aes(x = IrisDataset$Sepal.Width, y = IrisDataset$Sepal.Length, color = IrisDataset$Species)) + geom_point()
IrisDataset <- read.csv('C:/Users/user/Downloads/R Tutorial Data/R Tutorial Data Sets/iris.csv')
attributes(IrisDataset)
summary(IrisDataset)
str(IrisDataset)
library(ggplot2)
ggplot(IrisDataset, aes(x = IrisDataset$Sepal.Length))+ geom_histogram(bins = 100)
ggplot(IrisDataset, aes(x = IrisDataset$Sepal.Width))+ geom_histogram(bins = 55)
ggplot(IrisDataset, aes(x = IrisDataset$Petal.Length))+ geom_histogram(bins = 120)
ggplot(IrisDataset, aes(x = IrisDataset$Petal.Width))+ geom_histogram(bins = 55)
boxplot(IrisDataset$Sepal.Length, IrisDataset$Sepal.Width, IrisDataset$Petal.Length, IrisDataset$Petal.Width, names = c("sepal lenght", "sepal width", "petal length", "petal width"))
ggplot(IrisDataset, aes(x = IrisDataset$Sepal.Width, y = IrisDataset$Sepal.Length, color = IrisDataset$Species)) + geom_point()
ggplot(IrisDataset, aes(x = IrisDataset$Petal.Width, y = IrisDataset$Petal.Length, color = IrisDataset$Species)) + geom_point()
ggplot(IrisDataset, aes(x = IrisDataset$Sepal.Length, y = IrisDataset$Petal.Length, color = IrisDataset$Species)) + geom_point()
ggplot(IrisDataset, aes(x = IrisDataset$Sepal.Width, y = IrisDataset$Petal.Width, color = IrisDataset$Species)) + geom_point()
ggplot(IrisDataset, aes(x = IrisDataset$Petal.Width, y = IrisDataset$Petal.Length, color = IrisDataset$Species)) + geom_point() + geom_abline()
ggplot(IrisDataset, aes(x = IrisDataset$Petal.Width, y = IrisDataset$Petal.Length, color = IrisDataset$Species)) + geom_point() + geom_abline(lm, x = IrisDataset$Petal.Width, y = IrisDataset$Petal.Length)
ggplot(IrisDataset, aes(x = IrisDataset$Petal.Width, y = IrisDataset$Petal.Length, color = IrisDataset$Species)) + geom_point() + geom_abline(lm, x = IrisDataset$Petal.Width, y = IrisDataset$Petal.Length)
ggplot(IrisDataset, aes(x = IrisDataset$Petal.Width, y = IrisDataset$Petal.Length, color = IrisDataset$Species)) + geom_point() + geom_abline(lm, aes(x = IrisDataset$Petal.Width, y = IrisDataset$Petal.Length))
ggplot(IrisDataset, aes(x = IrisDataset$Petal.Width, y = IrisDataset$Petal.Length, color = IrisDataset$Species)) + geom_point()
ggplot(IrisDataset, aes(x = IrisDataset$Sepal.Width, y = IrisDataset$Sepal.Length, color = IrisDataset$Species)) + geom_point() + xlim(0, 8) + ylim(0,8)
ggplot(IrisDataset, aes(x = IrisDataset$Petal.Width, y = IrisDataset$Petal.Length, color = IrisDataset$Species)) + geom_point() + xlim(0, 8) + ylim(0,8)
ggplot(IrisDataset, aes(x = IrisDataset$Sepal.Width, y = IrisDataset$Petal.Width, color = IrisDataset$Species)) + geom_point() + xlim(0, 8) + ylim(0,8)
ggplot(IrisDataset, aes(x = IrisDataset$Sepal.Length, y = IrisDataset$Petal.Length, color = IrisDataset$Species)) + geom_point() + xlim(0, 8) + ylim(0,8)
set.seed(123)
trainSize <- round(nrow(IrisDataset) * 0.2)
testSize <- nrow(IrisDataset) - trainSize
training_indices<-sample(seq_len(nrow(IrisDataset)),size =trainSize)
trainSet <- IrisDataset[training_indices, ]
testSet <- IrisDataset[-training_indices, ]
set.seed(405)
trainSet <- IrisDataset[training_indices, ]
testSet <- IrisDataset[-training_indices, ]
LinearModel<- lm(Petal.Length ~ Petal.Width, trainSet)
summary(LinearModel)
prediction<-predict(LinearModel,testSet)
plot(IrisDataset$'Petal.Length'  ~ IrisDataset$'Petal.Width' )
abline(lm(IrisDataset$'Petal.Length'  ~ IrisDataset$'Petal.Width'))
prediction_error<-(testSet$Petal.Length - prediction)
tabla_final_iris<- cbind(testSet, prediction, prediction_error)
View(tabla_final_iris)
View(tabla_final_iris)
ggplot(tabla_final_iris, aes(x = tabla_final_iris$prediction, y = tabla_final_iris$petal)) + geom_point()
ggplot(tabla_final_iris, aes(x = tabla_final_iris$prediction, y = tabla_final_iris$petal)) + geom_point()
ggplot(tabla_final_iris, aes(x = tabla_final_iris$prediction, y = tabla_final_iris$petal) + geom_point())
ggplot(tabla_final_iris, aes(x = tabla_final_iris$prediction, y = tabla_final_iris$petal) + geom_point(aes(x = tabla_final_iris$prediction, y = tabla_final_iris$petal)))
ggplot(tabla_final_iris, aes(x = tabla_final_iris$Petal.Width, y = tabla_final_iris$prediction, color = tabla_final_iris$Species)) + geom_point() + xlim(0, 8) + ylim(0,8)
(sum(abs(prediction_error))/120
(sum(abs(prediction_error))/120
sum(abs(prediction_error)/120
sum(abs(prediction_error))/120
sqrt(sum(prediction_error^2)/120)
ggplot(tabla_final_iris, aes(x = tabla_final_iris$Petal.Length, y = tabla_final_iris$prediction, color = tabla_final_iris$Species)) + geom_point() + xlim(0, 8) + ylim(0,8) + geom_abline()
IrisDataset <- read.csv('C:/Users/user/Downloads/R Tutorial Data/R Tutorial Data Sets/iris.csv')
attributes(IrisDataset)
summary(IrisDataset)
str(IrisDataset)
library(ggplot2)
boxplot(IrisDataset$Sepal.Length, IrisDataset$Sepal.Width, IrisDataset$Petal.Length, IrisDataset$Petal.Width, names = c("sepal lenght", "sepal width", "petal length", "petal width"))
ggplot(IrisDataset, aes(x = IrisDataset$Sepal.Width, y = IrisDataset$Sepal.Length, color = IrisDataset$Species)) + geom_point() + xlim(0, 8) + ylim(0,8)
ggplot(IrisDataset, aes(x = IrisDataset$Petal.Width, y = IrisDataset$Petal.Length, color = IrisDataset$Species)) + geom_point() + xlim(0, 8) + ylim(0,8)
ggplot(IrisDataset, aes(x = IrisDataset$Sepal.Width, y = IrisDataset$Petal.Width, color = IrisDataset$Species)) + geom_point() + xlim(0, 8) + ylim(0,8)
ggplot(IrisDataset, aes(x = IrisDataset$Sepal.Length, y = IrisDataset$Petal.Length, color = IrisDataset$Species)) + geom_point() + xlim(0, 8) + ylim(0,8)
set.seed(123)
trainSize <- round(nrow(IrisDataset) * 0.2)
testSize <- nrow(IrisDataset) - trainSize
training_indices <- sample(seq_len(nrow(IrisDataset)), size = trainSize)
trainSet <- IrisDataset[training_indices, ]
testSet <- IrisDataset[-training_indices, ]
set.seed(405)
trainSet <- IrisDataset[training_indices, ]
testSet <- IrisDataset[-training_indices, ]
LinearModel <- lm(Petal.Length ~ Petal.Width, trainSet)
summary(LinearModel)
prediction <- predict(LinearModel, testSet)
plot(IrisDataset$'Petal.Length' ~ IrisDataset$'Petal.Width' )
abline(lm(IrisDataset$'Petal.Length' ~ IrisDataset$'Petal.Width'))
prediction_error <- (testSet$Petal.Length - prediction)
tabla_final_iris <- cbind(testSet, prediction, prediction_error)
sum(abs(prediction_error))/120
sqrt(sum(prediction_error^2)/120)
ggplot(tabla_final_iris, aes(x = tabla_final_iris$Petal.Width, y = tabla_final_iris$prediction, color = tabla_final_iris$Species)) + geom_point() + xlim(0, 8) + ylim(0,8)
ggplot(tabla_final_iris, aes(x = tabla_final_iris$Petal.Length, y = tabla_final_iris$prediction, color = tabla_final_iris$Species)) + geom_point() + xlim(0, 8) + ylim(0,8) + geom_abline()
set.seed(123)
trainSize <- round(nrow(IrisDataset) * 0.8)
testSize <- nrow(IrisDataset) - trainSize
training_indices <- sample(seq_len(nrow(IrisDataset)), size = trainSize)
trainSet <- IrisDataset[training_indices, ]
testSet <- IrisDataset[-training_indices, ]
set.seed(405)
trainSet <- IrisDataset[training_indices, ]
testSet <- IrisDataset[-training_indices, ]
LinearModel <- lm(Petal.Length ~ Petal.Width, trainSet)
summary(LinearModel)
prediction <- predict(LinearModel, testSet)
plot(IrisDataset$'Petal.Length' ~ IrisDataset$'Petal.Width' )
abline(lm(IrisDataset$'Petal.Length' ~ IrisDataset$'Petal.Width'))
prediction_error <- (testSet$Petal.Length - prediction)
tabla_final_iris <- cbind(testSet, prediction, prediction_error)
sum(abs(prediction_error))/120
sqrt(sum(prediction_error^2)/120)
ggplot(tabla_final_iris, aes(x = tabla_final_iris$Petal.Width, y = tabla_final_iris$prediction, color = tabla_final_iris$Species)) + geom_point() + xlim(0, 8) + ylim(0,8)
ggplot(tabla_final_iris, aes(x = tabla_final_iris$Petal.Length, y = tabla_final_iris$prediction, color = tabla_final_iris$Species)) + geom_point() + xlim(0, 8) + ylim(0,8) + geom_abline()
ggplot(tabla_final_iris, aes(x = tabla_final_iris$Petal.Width, y = tabla_final_iris$prediction, color = tabla_final_iris$Species)) + geom_point() + xlim(0, 8) + ylim(0,8)
ggplot(tabla_final_iris, aes(x = tabla_final_iris$Petal.Length, y = tabla_final_iris$prediction, color = tabla_final_iris$Species)) + geom_point() + xlim(0, 8) + ylim(0,8) + geom_abline()
ggplot(IrisDataset, aes(x = IrisDataset$Petal.Width, y = IrisDataset$Petal.Length, color = IrisDataset$Species)) + geom_point() + xlim(0, 8) + ylim(0,8)
